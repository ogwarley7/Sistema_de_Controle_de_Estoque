# Sistema de Controle de Estoque

## Descrição

O Sistema de Controle de Estoque é uma aplicação para gerenciar produtos, fornecedores e pedidos de reposição. Este repositório contém o código SQL necessário para criar e gerenciar o banco de dados do sistema.

## Estrutura do Banco de Dados

O banco de dados contém as seguintes tabelas:

- **Fornecedores**: Armazena informações sobre os fornecedores.
- **Produtos**: Armazena informações sobre os produtos e sua quantidade em estoque.
- **PedidosReposicao**: Registra os pedidos de reposição realizados.

## Comandos SQL

### 1. Excluir e Criar o Banco de Dados


-- Excluir o banco de dados se ele existir
DROP DATABASE IF EXISTS SistemaControleEstoque;

-- Criar o banco de dados
CREATE DATABASE SistemaControleEstoque;

-- Selecionar o banco de dados para uso
USE SistemaControleEstoque;

-- Desativar a segurança de atualizações (para permitir atualizações e exclusões sem cláusula WHERE)
SET SQL_SAFE_UPDATES = 0;
## Criar Tabelas
-- Tabela de Fornecedores
CREATE TABLE Fornecedores (
    id_fornecedor INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    contato VARCHAR(100),
    telefone VARCHAR(15),
    endereco VARCHAR(255)
);

-- Tabela de Produtos
CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10, 2),
    quantidade_estoque INT DEFAULT 0,
    id_fornecedor INT,
    FOREIGN KEY (id_fornecedor) REFERENCES Fornecedores(id_fornecedor)
        ON DELETE SET NULL
);

-- Tabela de Pedidos de Reposição
CREATE TABLE PedidosReposicao (
    id_pedido INT AUTO_INCREMENT PRIMARY KEY,
    data_pedido DATE NOT NULL,
    id_produto INT,
    quantidade INT NOT NULL,
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
        ON DELETE CASCADE
);
 ## Inserir Dados
-- Inserir Fornecedores
INSERT INTO Fornecedores (nome, contato, telefone, endereco) VALUES
('Fornecedor A', 'João Silva', '1234-5678', 'Rua das Flores, 123'),
('Fornecedor B', 'Maria Oliveira', '9876-5432', 'Avenida Brasil, 456');

-- Inserir Produtos
INSERT INTO Produtos (nome, descricao, preco, quantidade_estoque, id_fornecedor) VALUES
('Produto X', 'Descrição do Produto X', 10.50, 100, 1),
('Produto Y', 'Descrição do Produto Y', 20.00, 50, 2);

-- Inserir Pedidos de Reposição
INSERT INTO PedidosReposicao (data_pedido, id_produto, quantidade) VALUES
('2024-09-01', 1, 50),
('2024-09-02', 2, 30);
## Consultar Dados
-- Consultar produtos em estoque
SELECT p.nome, p.descricao, p.quantidade_estoque, f.nome AS fornecedor
FROM Produtos p
JOIN Fornecedores f ON p.id_fornecedor = f.id_fornecedor;

-- Consultar pedidos de reposição
SELECT pr.data_pedido, p.nome AS produto, pr.quantidade
FROM PedidosReposicao pr
JOIN Produtos p ON pr.id_produto = p.id_produto;
## Atualizar Dados
-- Atualizar quantidade de estoque após reposição
UPDATE Produtos p
JOIN (
    SELECT id_produto, SUM(quantidade) AS total_reposicao
    FROM PedidosReposicao
    GROUP BY id_produto
) pr ON p.id_produto = pr.id_produto
SET p.quantidade_estoque = p.quantidade_estoque + pr.total_reposicao;
## Excluir Registros
-- Excluir um fornecedor (por exemplo, o fornecedor com id 2)
DELETE FROM Fornecedores WHERE id_fornecedor = 2;

-- Excluir um produto (por exemplo, o produto com id 1)
DELETE FROM Produtos WHERE id_produto = 1;
